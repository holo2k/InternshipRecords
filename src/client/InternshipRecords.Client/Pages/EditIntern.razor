@page "/edit-intern/{Id:guid}"
@using InternshipRecords.Client.Services
@using InternshipRecords.Client.Services.Intern
@using Shared.Models
@inject InternService InternService
@inject DirectionService DirectionService
@inject ProjectService ProjectService
@inject NavigationManager NavigationManager

<div class="card">
    <h3>Редактирование стажера</h3>

    @if (intern.FirstName.Length == 0)
    {
        <p>Загрузка...</p>
    }
    else
    {
        <EditForm Model="internRequest" OnValidSubmit="HandleValidSubmit">
            <DataAnnotationsValidator />
            <ValidationSummary />

            <div class="form-group">
                <label>Имя:</label>
                <InputText @bind-Value="internRequest.FirstName" class="form-control" />
            </div>

            <div class="form-group">
                <label>Фамилия:</label>
                <InputText @bind-Value="internRequest.LastName" class="form-control" />
            </div>

            <div class="form-group">
                <label>Пол:</label>
                <InputSelect @bind-Value="internRequest.Gender" class="form-control">
                    <option value="">Выберите пол</option>
                    <option value="Male">Мужской</option>
                    <option value="Female">Женский</option>
                </InputSelect>
            </div>

            <div class="form-group">
                <label>Email:</label>
                <InputText @bind-Value="internRequest.Email" class="form-control" />
            </div>

            <div class="form-group">
                <label>Телефон:</label>
                <InputText @bind-Value="internRequest.Phone" class="form-control" placeholder="+7..." />
            </div>

            <div class="form-group">
                <label>Дата рождения:</label>
                <InputDate @bind-Value="internRequest.BirthDate" class="form-control" />
            </div>

            <div class="form-group">
                <label>Направление стажировки:</label>
                <InputSelect @bind-Value="internRequest.DirectionId" class="form-control">
                    <option value="">Выберите направление</option>
                    @foreach (var d in directions)
                    {
                        <option value="@d.Id">@d.Name</option>
                    }
                </InputSelect>
                <div class="add-item">
                    <InputText placeholder="Новое направление" @bind-Value="newDirectionName" class="form-control" />
                    <button type="button" class="btn" @onclick="AddDirection">Добавить</button>
                </div>
            </div>

            <div class="form-group">
                <label>Текущий проект:</label>
                <InputSelect @bind-Value="internRequest.ProjectId" class="form-control">
                    <option value="">Выберите проект</option>
                    @foreach (var p in projects)
                    {
                        <option value="@p.Id">@p.Name</option>
                    }
                </InputSelect>
                <div class="add-item">
                    <InputText placeholder="Новый проект" @bind-Value="newProjectName" class="form-control" />
                    <button type="button" class="btn" @onclick="AddProject">Добавить</button>
                </div>
            </div>

            <button type="submit" class="btn btn-primary">Сохранить</button>
            <button type="button" class="btn btn-secondary" @onclick="Cancel">Отмена</button>
        </EditForm>
    }
    <EditForm Model="@internRequest" OnValidSubmit="@HandleValidSubmit">
        <DataAnnotationsValidator />
        <ValidationSummary />

        <div class="form-group">
            <label>Имя:</label>
            <InputText @bind-Value="@internRequest.FirstName" class="form-control" />
        </div>

        <div class="form-group">
            <label>Фамилия:</label>
            <InputText @bind-Value="@internRequest.LastName" class="form-control" />
        </div>

        <div class="form-group">
            <label>Пол:</label>
            <InputSelect @bind-Value="@internRequest.Gender" class="form-control">
                <option value="">Выберите пол</option>
                <option value="Male">Мужской</option>
                <option value="Female">Женский</option>
            </InputSelect>
        </div>

        <div class="form-group">
            <label>Email:</label>
            <InputText @bind-Value="@internRequest.Email" class="form-control" />
        </div>

        <div class="form-group">
            <label>Телефон:</label>
            <InputText @bind-Value="@internRequest.Phone" class="form-control" placeholder="+7..." />
        </div>

        <div class="form-group">
            <label>Дата рождения:</label>
            <InputDate @bind-Value="@internRequest.BirthDate" class="form-control" />
        </div>

        <div class="form-group">
            <label>Направление стажировки:</label>
            <InputSelect @bind-Value="@internRequest.DirectionId" class="form-control">
                <option value="">Выберите направление</option>
                @foreach (var d in directions)
                {
                    <option value="@d.Id">@d.Name</option>
                }
            </InputSelect>
            <div class="add-item">
                <InputText placeholder="Новое направление" @bind-Value="@newDirectionName" class="form-control" />
                <button type="button" class="btn" @onclick="@AddDirection">Добавить</button>
            </div>
        </div>

        <div class="form-group">
            <label>Текущий проект:</label>
            <InputSelect @bind-Value="@internRequest.ProjectId" class="form-control">
                <option value="">Выберите проект</option>
                @foreach (var p in projects)
                {
                    <option value="@p.Id">@p.Name</option>
                }
            </InputSelect>
            <div class="add-item">
                <InputText placeholder="Новый проект" @bind-Value="@newProjectName" class="form-control" />
                <button type="button" class="btn" @onclick="@AddProject">Добавить</button>
            </div>
        </div>

        <button type="submit" class="btn btn-primary">Сохранить</button>
        <button type="button" class="btn btn-secondary" @onclick="@Cancel">Отмена</button>
    </EditForm>
</div>

@code {
    [Parameter]
    public Guid Id { get; set; }

    private InternDto intern;
    private UpdateInternRequest internRequest = new UpdateInternRequest();
    private List<DirectionDto> directions = new();
    private List<ProjectDto> projects = new();
    private string newDirectionName = "";
    private string newProjectName = "";

    protected override async Task OnInitializedAsync()
    {
        intern = await InternService.GetInternAsync(Id);
        if (intern.FirstName.Length > 0)
        {
            internRequest.Id = intern.Id;
            internRequest.FirstName = intern.FirstName;
            internRequest.LastName = intern.LastName;
        }
    }

    private async Task AddDirection()
    {
        if (!string.IsNullOrWhiteSpace(newDirectionName))
        {
            var newDirection = await DirectionService.AddDirectionAsync(new AddDirectionRequest { Name = newDirectionName });
            if (newDirection != null)
            {
                directions.Add(newDirection);
                internRequest.DirectionId = newDirection.Id;
                newDirectionName = "";
            }
        }
    }

    private async Task AddProject()
    {
        if (!string.IsNullOrWhiteSpace(newProjectName))
        {
            var newProject = await ProjectService.AddProjectAsync(new AddProjectRequest { Name = newProjectName });
            if (newProject != null)
            {
                projects.Add(newProject);
                internRequest.ProjectId = newProject.Id;
                newProjectName = "";
            }
        }
    }

    private async Task HandleValidSubmit()
    {
        try
        {
            await InternService.UpdateInternAsync(internRequest);
            NavigationManager.NavigateTo("/interns");
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Ошибка при обновлении стажера: {ex.Message}");
        }
    }

    private void Cancel()
    {
        NavigationManager.NavigateTo("/interns");
    }
}