@page "/edit-intern/{Id:guid}"
@using InternshipRecords.Client.Services.Intern
@using InternshipRecords.Client.Services
@using Shared.Models.Intern
@using Shared.Models.Direction
@using Shared.Models.Project
@inject InternService InternService
@inject DirectionService DirectionService
@inject ProjectService ProjectService
@inject NavigationManager NavigationManager

<div class="page-center">
    <div class="card p-3" style="max-width:800px;">
        <h3>Редактирование стажера</h3>

        @if (!_loaded)
        {
            <p>Загрузка...</p>
        }
        else
        {
            <EditForm Model="_internRequest" OnValidSubmit="HandleValidSubmit">
                <DataAnnotationsValidator />
                <ValidationSummary />

                <div style="display:flex;gap:10px;flex-wrap:wrap">
                    <div style="flex:1;min-width:180px">
                        <label>Имя</label>
                        <InputText @bind-Value="_internRequest.FirstName" class="form-control" />
                    </div>
                    <div style="flex:1;min-width:180px">
                        <label>Фамилия</label>
                        <InputText @bind-Value="_internRequest.LastName" class="form-control" />
                    </div>
                </div>

                <div style="display:flex;gap:10px;margin-top:8px">
                    <div style="flex:1;min-width:180px">
                        <label>Пол</label>
                        <InputSelect TValue="Shared.Enums.Gender" @bind-Value="_internRequest.Gender" class="form-control">
                            @foreach (Shared.Enums.Gender g in Enum.GetValues(typeof(Shared.Enums.Gender)))
                            {
                                <option value="@g">@g</option>
                            }
                        </InputSelect>
                    </div>

                    <div style="flex:1;min-width:180px">
                        <label>Email</label>
                        <InputText @bind-Value="_internRequest.Email" class="form-control" />
                    </div>
                </div>

                <div style="display:flex;gap:10px;margin-top:8px">
                    <div style="flex:1;min-width:180px">
                        <label>Телефон</label>
                        <InputText @bind-Value="_internRequest.Phone" class="form-control" />
                    </div>

                    <div style="flex:1;min-width:180px">
                        <label>Дата рождения</label>
                        <InputDate @bind-Value="_internRequest.BirthDate" class="form-control" />
                    </div>
                </div>

                <div style="display:flex;gap:10px;margin-top:8px">
                    <div style="flex:1;min-width:220px">
                        <label>Направление</label>
                        <InputSelect @bind-Value="_internRequest.DirectionId" class="form-control">
                            <option value="">Нет</option>
                            @foreach (var d in _directions)
                            {
                                @:@d.Id">@d.Name
                                @:</option>
                            }
                        </InputSelect>
                    </div>

                    <div style="flex:1;min-width:220px">
                        <label>Проект</label>
                        <InputSelect @bind-Value="_internRequest.ProjectId" class="form-control">
                            <option value="">Нет</option>
                            @foreach (var p in _projects)
                            {
                                
                                if (p != null)
                                {
                                    @:@p.Id">@p.Name
                                }
                                @:</option>
                            }
                        </InputSelect>
                    </div>
                </div>

                <div style="margin-top:12px;display:flex;gap:8px">
                    <button type="submit" class="btn btn-primary">Сохранить</button>
                    <button type="button" class="btn btn-secondary" @onclick="Cancel">Отмена</button>
                </div>
            </EditForm>
        }
    </div>
</div>

@code {
    [Parameter] public Guid Id { get; set; }
    private bool _loaded;
    private InternDto _intern = new();
    private readonly UpdateInternRequest _internRequest = new();
    private List<DirectionDto> _directions = new();
    private List<ProjectDto?> _projects = new();

    protected override async Task OnInitializedAsync()
    {
        await LoadLookups();
        await LoadIntern();
    }

    private async Task LoadLookups()
    {
        _directions = await DirectionService.GetDirectionsAsync();
        _projects = await ProjectService.GetProjectsAsync();
    }

    private async Task LoadIntern()
    {
        _intern = await InternService.GetInternAsync(Id);

        _internRequest.Id = _intern.Id;
        _internRequest.FirstName = _intern.FirstName;
        _internRequest.LastName = _intern.LastName;
        _internRequest.Email = _intern.Email;
        _internRequest.Phone = _intern.Phone;
        _internRequest.BirthDate = _intern.BirthDate;
        _internRequest.DirectionId = _intern.DirectionId;
        _internRequest.ProjectId = _intern.ProjectId;
        _internRequest.Gender = _intern.Gender;

        _loaded = true;
        await InvokeAsync(StateHasChanged);
    }

    private async Task HandleValidSubmit()
    {
        try
        {
            await InternService.UpdateInternAsync(_internRequest);
            NavigationManager.NavigateTo("/interns");
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Ошибка при обновлении стажера: {ex.Message}");
        }
    }

    private void Cancel() => NavigationManager.NavigateTo("/interns");
}
