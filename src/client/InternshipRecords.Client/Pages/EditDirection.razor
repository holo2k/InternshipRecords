@page "/edit-direction/{Id:guid}"
@using InternshipRecords.Client.Services
@using InternshipRecords.Client.Services.Intern
@using Microsoft.AspNetCore.Components
@using Shared.Models.Intern
@using Shared.Models.Project
@inject DirectionService DirectionService
@inject InternService InternService
@inject NavigationManager NavigationManager

<div class="page-center" style="min-height:100vh; display:flex; align-items:center; justify-content:center; padding:16px;">
    <div class="edit-card">
        <h3 class="mb-3">Редактировать направление</h3>

        @if (!_loaded)
        {
            <p>Загрузка...</p>
        }
        else
        {
            <EditForm Model="_model" OnValidSubmit="Save">
                <DataAnnotationsValidator/>
                <ValidationSummary/>

                <div class="mb-3">
                    <label class="form-label">Название</label>
                    <InputText @bind-Value="_model.Name" class="form-control" placeholder="Введите название направления"/>
                </div>

                <div class="mb-3">
                    <label class="form-label">Описание</label>
                    <InputTextArea @bind-Value="_model.Description" class="form-control" rows="4" placeholder="Введите описание"/>
                </div>

                <div class="mb-3">
                    <label class="form-label">Связанные стажёры</label>
                    <select multiple class="form-select" style="height: 150px;" @onchange="OnSelectedChanged">
                        @foreach (var item in _allInterns)
                        {
                            <option value="@item.Id" selected="@_selectedInternIds.Contains(item.Id)">
                                @item.FirstName @item.LastName
                            </option>
                        }
                    </select>
                </div>

                <div class="d-flex justify-content-end gap-2">
                    <button type="button" class="btn btn-secondary" @onclick="Cancel">
                        Отмена
                    </button>
                    <button type="submit" class="btn btn-primary">Сохранить</button>
                </div>
            </EditForm>
        }
    </div>
</div>
@code {
    [Parameter] public Guid Id { get; set; }
    private readonly UpdateDirectionRequest _model = new();
    private List<InternDto> _allInterns = new();
    private List<Guid> _selectedInternIds = new();
    private bool _loaded;

    private void OnSelectedChanged(ChangeEventArgs e)
    {
        var selectedValues = ((IEnumerable<string>)e.Value!).ToList();
        _selectedInternIds = selectedValues.Select(Guid.Parse).ToList();
    }


    protected override async Task OnInitializedAsync()
    {
        _allInterns = await InternService.GetInternsAsync();
        var dir = (await DirectionService.GetDirectionsAsync()).Directions.FirstOrDefault(d => d.Id == Id);
        _model.Id = Id;
        _model.Name = dir?.Name ?? "";
        _model.Description = dir?.Description ?? "";
        _selectedInternIds = _allInterns.Where(i => i.DirectionId == Id).Select(i => i.Id).ToList();
        _loaded = true;
    }

    private async Task Save()
    {
        _model.InternIds = _selectedInternIds;
        var updated = await DirectionService.UpdateDirectionAsync(_model);
        if (updated.Direction != null) NavigationManager.NavigateTo("/directions-projects");
        else throw new Exception("Возникла ошибка при обновлении направления");
    }

    private void Cancel() => NavigationManager.NavigateTo("/directions-projects");
}